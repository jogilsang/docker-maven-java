version: 0.2

phases:
  install: # Install AWS cli, maven
    runtime-versions:
      golang: 1.20 
    commands:
       - sudo yum update -y
       - curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
       - chmod +x ./aws-iam-authenticator
       - mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
       - aws sts get-caller-identity
 
  pre_build: # Check availability of Maven and it's version, Integration of Aquasecurity with AWS SecurityHub if not enabled
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build: # Build Docker image,tag it with the commit sha, Scan the docker image using trivy, push the docker image to ECR
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...  
      
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME

      - docker build . -t $ECR_REPO_NAME:latest -f Dockerfile
      - docker tag $ECR_REPO_NAME:latest $REPOSITORY_URI:$IMAGE_TAG
      # - docker tag $ECR_REPO_NAME:latest $REPOSITORY_URI:latest
 
  post_build: 
    commands: 
      - echo Build completed on `date` 
      - echo Pushing the Docker image... 

      - docker push $REPOSITORY_URI:$IMAGE_TAG 
      # - docker push $REPOSITORY_URI:latest

      - printf '{\n"ImageURI":"%s"\n}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json

      # TODO : ECS CI/CD 사용 시 동적으로 사용을 원할경우
      # - sed -i "s/CONTAINER_NAME/$CONTAINER_NAME/" appspec.yaml
      # - sed -i "s/CONTAINER_PORT/$CONTAINER_PORT/" appspec.yaml
      # - sed -i "s/CONTAINER_NAME/$CONTAINER_NAME/" taskdef.json
      # - sed -i "s/CONTAINER_PORT/$CONTAINER_PORT/" taskdef.json
      # - sed -i "s/HOST_PORT/$HOST_PORT/" taskdef.json
      # - sed -i "s/TASK_FAMILY/$TASK_FAMILY/" taskdef.json
      # - echo Writing image definitions file...

artifacts:
  files:
    - imageDetail.json
    - appspec.yaml
    - taskdef.json

cache:
  paths:
    - '/root/.m2/**/*'